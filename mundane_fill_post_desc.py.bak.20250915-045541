# -*- coding: utf-8 -*-
import os, sys, json, re

RX_TXT = {
  'Солнце':  'Ретроградные фазы Солнца не применяются; фокус на распределении энергии и внимания.',
  'Меркурий':'Ретроградность Меркурия — пересбор договорённостей, проверка фактов и логистики.',
  'Венера':  'Ретроградность Венеры — переоценка ценностей и отношений; мягко корректируйте ожидания.',
  'Марс':    'Ретроградность Марса — дозируйте заряд, избегайте «в лоб».',
  'Юпитер':  'Ретроградность Юпитера — калибровка амбиций и горизонтов; учёба глубже.',
  'Сатурн':  'Ретроградность Сатурна — пересмотр структуры и обязательств; без самокарания.',
  'Уран':    'Ретроградность Урана — изменения дозировать, без сжигания мостов.',
  'Нептун':  'Ретроградность Нептуна — проверка вдохновений: меньше тумана, больше фактов.',
  'Плутон':  'Ретроградность Плутона — глубокая чистка и работа с собственной силой.',
}

# Станции: тексты по планете и направлению
ST_TXT_GENERIC = {
  'S->℞': 'Смена хода: дайте системе стабилизироваться; не стартуйте новое, завершайте незавершённое.',
  '℞->D': 'Выход из ретро: завершение пересмотра, внедрение выводов; далее — планета работает в штатном режиме.',
}
ST_TXT_PLANET = {
  'Меркурий': {
    'S->℞': 'Смена хода Меркурия: снижаем обороты, перепроверяем договорённости и коммуникации.',
    '℞->D': 'Выход из ретро: завершение пересмотра, внедрение выводов; далее — планета работает в штатном режиме.',
  },
  'Венера': {
    'S->℞': 'Смена хода Венеры: ревизия ценностей, отношений и бюджета; не спешите с выводами.',
    '℞->D': 'Выход из ретро: завершение пересмотра, внедрение выводов; далее — планета работает в штатном режиме.',
  },
  'Марс': {
    'S->℞': 'Смена хода Марса: энергию дозировать; избегать конфронтаций и перегруза.',
    '℞->D': 'Выход из ретро: завершение пересмотра, внедрение выводов; далее — планета работает в штатном режиме.',
  },
  'Юпитер': {
    'S->℞': 'Смена хода Юпитера: калибруем амбиции и горизонты; учимся вглубь.',
    '℞->D': 'Выход из ретро: завершение пересмотра, внедрение выводов; далее — планета работает в штатном режиме.',
  },
  'Сатурн': {
    'S->℞': 'Смена хода Сатурна: пересмотр структуры и обязательств; упростите план.',
    '℞->D': 'Выход из ретро: завершение пересмотра, внедрение выводов; далее — планета работает в штатном режиме.',
  },
  'Уран': {
    'S->℞': 'Смена хода Урана: изменения дозировать; сохраняйте запас по рискам.',
    '℞->D': 'Выход из ретро: завершение пересмотра, внедрение выводов; далее — планета работает в штатном режиме.',
  },
  'Нептун': {
    'S->℞': 'Смена хода Нептуна: проверьте ориентир; различайте вдохновение и иллюзию.',
    '℞->D': 'Выход из ретро: завершение пересмотра, внедрение выводов; далее — планета работает в штатном режиме.',
  },
  'Плутон': {
    'S->℞': 'Смена хода Плутона: внутренние трансформации — точечно, без форсирования.',
    '℞->D': 'Выход из ретро: завершение пересмотра, внедрение выводов; далее — планета работает в штатном режиме.',
  },
}

PLANETS = r'(Солнце|Меркурий|Венера|Марс|Юпитер|Сатурн|Уран|Нептун|Плутон)'
RETRO   = r'(ретр\w*|℞|rx\b|\bR\b)'

def detect_station(summary: str):
    s = summary
    m = re.search(r'переход\s+в\s+(℞|R|RX|D)', s, re.I)
    if m:
        mode = m.group(1).upper()
        return 'S->℞' if mode in ('℞','R','RX') else '℞->D'
    m = re.search(r'станц\w*\s*(℞|R|RX|D)', s, re.I)
    if m:
        mode = m.group(1).upper()
        return '℞->D' if mode == 'D' else 'S->℞'
    m = re.search(r'S\s*[→\-]?\s*(℞|R|RX|D)', s, re.I)
    if m:
        mode = m.group(1).upper()
        return 'S->℞' if mode in ('℞','R','RX') else '℞->D'
    return None

def planet_from_summary(summary: str):
    m = re.match(rf'^{PLANETS}', summary)
    return m.group(1).capitalize() if m else None

def main(path):
    p=os.path.expanduser(path)
    d=json.load(open(p,encoding='utf-8'))
    ev=d.get('events',[]) if isinstance(d,dict) else d
    changed=0
    for e in ev:
        summ = (e.get('summary') or '')
        desc = (e.get('description') or '').strip()

        # 1) станции: дополняем пустое или правим «не к планете»
        st = detect_station(summ)
        pl = planet_from_summary(summ)
        if st and pl:
            wrong_venus = ('Венера' in desc) and (pl != 'Венера')
            if (not desc) or wrong_venus:
                txt = ST_TXT_PLANET.get(pl, {}).get(st) or ST_TXT_GENERIC.get(st)
                if txt:
                    e['description'] = txt
                    changed += 1
                continue

        # 2) ретро: дополняем пустое
        m = re.search(rf'{PLANETS}.*{RETRO}', summ, re.I)
        if m and not desc:
            key = m.group(1).capitalize()
            e['description'] = RX_TXT.get(key, 'Ретроградный период — пересбор и корректировка.')
            changed += 1

    json.dump({"events":ev}, open(p,'w',encoding='utf-8'), ensure_ascii=False, indent=2)
    print(f"OK post-fill: {changed} updated in {p}")

if __name__=='__main__':
    if len(sys.argv)<2:
        print("Usage: python mundane_fill_post_desc.py fixed.json"); sys.exit(1)
    main(sys.argv[1])
